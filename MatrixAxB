a := MatrixInputA[1];
b := MatrixInputA[2];
c := MatrixInputA[3];
d := MatrixInputA[4];
e := MatrixInputA[5];
f := MatrixInputA[6];
g := MatrixInputA[7];
h := MatrixInputA[8];
i := MatrixInputA[9];
j := MatrixInputA[10];
k := MatrixInputA[11];
l := MatrixInputA[12];
m := MatrixInputA[13];
n := MatrixInputA[14];
o := MatrixInputA[15];
p := MatrixInputA[16];
#
B1 := MatrixInputB[1];
B2 := MatrixInputB[2];
B3 := MatrixInputB[3];
B4 := MatrixInputB[4];
B5 := MatrixInputB[5];
B6 := MatrixInputB[6];
B7 := MatrixInputB[7];
B8 := MatrixInputB[8];
B9 := MatrixInputB[9];
B10 := MatrixInputB[10];
B11 := MatrixInputB[11];
B12 := MatrixInputB[12];
B13 := MatrixInputB[13];
B14 := MatrixInputB[14];
B15 := MatrixInputB[15];
B16 := MatrixInputB[16];
#
MatrixOutput[1] := a * B1 + b * B5 + c * B9 + d * B13;
MatrixOutput[2] := a * B2 + b * B6 + c * B10 + d * B14;
MatrixOutput[3] := a * B3 + b * B7 + c * B11 + d * B15;
MatrixOutput[4] := a * B4 + b * B8 + c * B12 + d * B16;
MatrixOutput[5] := e * B1 + f * B5 + g * B9 + h * B13;
MatrixOutput[6] := e * B2 + f * B6 + g * B10 + h * B14;
MatrixOutput[7] := e * B3 + f * B7 + g * B11 + h * B15;
MatrixOutput[8] := e * B4 + f * B8 + g * B12 + h * B16;
MatrixOutput[9] := i * B1 + j * B5 + k * B9 + l * B13;
MatrixOutput[10] := i * B2 + j * B6 + k * B10 + l * B14;
MatrixOutput[11] := i * B3 + j * B7 + k * B11 + l * B15;
MatrixOutput[12] := i * B4 + j * B8 + k * B12 + l * B16;
MatrixOutput[13] := m * B1 + n * B5 + o * B9 + p * B13;
MatrixOutput[14] := m * B2 + n * B6 + o * B10 + p * B14;
MatrixOutput[15] := m * B3 + n * B7 + o * B11 + p * B15;
MatrixOutput[16] := m * B4 + n * B8 + o * B12 + p * B16;
#
RETURN;
