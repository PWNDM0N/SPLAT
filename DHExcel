#D.Wilson 02/01/23
#Uses existing Excel sheet to create output excel file - Piperun uses pipes created in WriteExcelPipe();
#
#
#2/4/23 Changed to write within the piperun document as it can only load one xlsx file into the internal thing at a time
#
#
#DHCounter is a check if the excel sheet "DHParams" has already been created
#Column names are set here format sheet, row, column 
IF DHCounter = 0 THEN
  XLSXExec(XLSXHandle, "Create_Sheet", 2, "DHParams");
  DHCounter := 1;
  #set values sheet, row, column
  XLSXExec(XLSXHandle, 'SET_CELL_VALUE', 2, 1, 1, "L_Trajectory");
  XLSXExec(XLSXHandle, 'SET_CELL_VALUE', 2, 1, 2, "R_Trajectory");
  XLSXExec(XLSXHandle, 'SET_CELL_VALUE', 2, 1, 3, "Theta_Z_Traectory");
  XLSXExec(XLSXHandle, 'SET_CELL_VALUE', 2, 1, 4, "Theta_0_Traectory");
  XLSXExec(XLSXHandle, 'SET_CELL_VALUE', 2, 1, 5, "FileName");
  XLSXExec(XLSXHandle, 'SET_CELL_VALUE', 2, 1, 6, "Z1");
  XLSXExec(XLSXHandle, 'SET_CELL_VALUE', 2, 1, 7, "Z2");
  XLSXExec(XLSXHandle, 'SET_CELL_VALUE', 2, 1, 8, "Z3");
  XLSXExec(XLSXHandle, 'SET_CELL_VALUE', 2, 1, 9, "Z4");
  XLSXExec(XLSXHandle, 'SET_CELL_VALUE', 2, 1, 10, "Z5");
  XLSXExec(XLSXHandle, 'SET_CELL_VALUE', 2, 1, 11, "Z6");
  XLSXExec(XLSXHandle, 'SET_CELL_VALUE', 2, 1, 12, "Z7");
  XLSXExec(XLSXHandle, 'SET_CELL_VALUE', 2, 1, 13, "Z8");
  XLSXExec(XLSXHandle, 'SET_CELL_VALUE', 2, 1, 14, "Z9");
  XLSXExec(XLSXHandle, 'SET_CELL_VALUE', 2, 1, 15, "Z10");
  XLSXExec(XLSXHandle, 'SET_CELL_VALUE', 2, 1, 16, "Z11");
  XLSXExec(XLSXHandle, 'SET_CELL_VALUE', 2, 1, 17, "Z12");
  XLSXExec(XLSXHandle, 'SET_CELL_VALUE', 2, 1, 18, "Z13");
  XLSXExec(XLSXHandle, 'SET_CELL_VALUE', 2, 1, 19, "Z14");
  XLSXExec(XLSXHandle, 'SET_CELL_VALUE', 2, 1, 20, "Z15");
  XLSXExec(XLSXHandle, 'SET_CELL_VALUE', 2, 1, 21, "Z16");
  #
  XLSXExec(XLSXHandle, 'SET_CELL_VALUE', 2, 2, 1, "0");
  XLSXExec(XLSXHandle, 'SET_CELL_VALUE', 2, 2, 2, "0");
  XLSXExec(XLSXHandle, 'SET_CELL_VALUE', 2, 2, 3, "0");
  XLSXExec(XLSXHandle, 'SET_CELL_VALUE', 2, 2, 4, "0");
  #Placerholder here as components come in at line 3, and the lookup function in inventor can't deal with empty cells 
  XLSXExec(XLSXHandle, 'SET_CELL_VALUE', 2, 2, 5, "Placeholder");
  #
  XLSXExec(XLSXHandle, 'SET_CELL_VALUE', 2, 2, 6, "1");
  XLSXExec(XLSXHandle, 'SET_CELL_VALUE', 2, 2, 7, "0");
  XLSXExec(XLSXHandle, 'SET_CELL_VALUE', 2, 2, 8, "0");
  XLSXExec(XLSXHandle, 'SET_CELL_VALUE', 2, 2, 9, "0");
  XLSXExec(XLSXHandle, 'SET_CELL_VALUE', 2, 2, 10, "0");
  XLSXExec(XLSXHandle, 'SET_CELL_VALUE', 2, 2, 11, "1");
  XLSXExec(XLSXHandle, 'SET_CELL_VALUE', 2, 2, 12, "0");
  XLSXExec(XLSXHandle, 'SET_CELL_VALUE', 2, 2, 13, "0");
  XLSXExec(XLSXHandle, 'SET_CELL_VALUE', 2, 2, 14, "0");
  XLSXExec(XLSXHandle, 'SET_CELL_VALUE', 2, 2, 15, "0");
  XLSXExec(XLSXHandle, 'SET_CELL_VALUE', 2, 2, 16, "1");
  XLSXExec(XLSXHandle, 'SET_CELL_VALUE', 2, 2, 17, "0");
  XLSXExec(XLSXHandle, 'SET_CELL_VALUE', 2, 2, 18, "0");
  XLSXExec(XLSXHandle, 'SET_CELL_VALUE', 2, 2, 19, "0");
  XLSXExec(XLSXHandle, 'SET_CELL_VALUE', 2, 2, 20, "0");
  XLSXExec(XLSXHandle, 'SET_CELL_VALUE', 2, 2, 21, "1");
ENDIF;
##
#Assigns the current calculated values to excel
DHExcel2();
#
RETURN;
